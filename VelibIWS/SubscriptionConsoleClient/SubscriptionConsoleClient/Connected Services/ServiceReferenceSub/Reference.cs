//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubscriptionConsoleClient.ServiceReferenceSub {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceSub.ISubStationService", CallbackContract=typeof(SubscriptionConsoleClient.ServiceReferenceSub.ISubStationServiceCallback))]
    public interface ISubStationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubStationService/GetStaion", ReplyAction="http://tempuri.org/ISubStationService/GetStaionResponse")]
        void GetStaion(string city, string station, int period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubStationService/GetStaion", ReplyAction="http://tempuri.org/ISubStationService/GetStaionResponse")]
        System.Threading.Tasks.Task GetStaionAsync(string city, string station, int period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubStationService/SubscribeStationEvent", ReplyAction="http://tempuri.org/ISubStationService/SubscribeStationEventResponse")]
        void SubscribeStationEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubStationService/SubscribeStationEvent", ReplyAction="http://tempuri.org/ISubStationService/SubscribeStationEventResponse")]
        System.Threading.Tasks.Task SubscribeStationEventAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubStationServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISubStationService/GetStation")]
        void GetStation(string city, string station, int period, string result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubStationServiceChannel : SubscriptionConsoleClient.ServiceReferenceSub.ISubStationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubStationServiceClient : System.ServiceModel.DuplexClientBase<SubscriptionConsoleClient.ServiceReferenceSub.ISubStationService>, SubscriptionConsoleClient.ServiceReferenceSub.ISubStationService {
        
        public SubStationServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SubStationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SubStationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubStationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubStationServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetStaion(string city, string station, int period) {
            base.Channel.GetStaion(city, station, period);
        }
        
        public System.Threading.Tasks.Task GetStaionAsync(string city, string station, int period) {
            return base.Channel.GetStaionAsync(city, station, period);
        }
        
        public void SubscribeStationEvent() {
            base.Channel.SubscribeStationEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeStationEventAsync() {
            return base.Channel.SubscribeStationEventAsync();
        }
    }
}
